{"version":3,"file":"static/js/606.a982fdd1.chunk.js","mappings":"kNAGaA,E,QAAuBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uBACpCC,EAAAA,GAAW,YAAc,c,6BCgCnC,EA5BgC,SAAHC,GAEc,IADvCC,EAAUD,EAAVC,WAEQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACRE,GAA8CC,EAAAA,EAAAA,YAAqBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAO1C,IALAI,EAAAA,EAAAA,YAAU,WACFR,GACAO,EAA6B,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAYU,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAQX,CAAY,IAEvF,GAAG,CAACA,EAAcD,KACbO,EACD,OAAO,KAIX,OACIM,EAAAA,EAAAA,KAACnB,EAAoB,CAAAoB,UACjBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAAAF,SACc,OAAfP,QAAe,IAAfA,OAAe,EAAfA,EAAiBK,QAEtBC,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACL,KAAqB,OAAfL,QAAe,IAAfA,OAAe,EAAfA,EAAiBK,KAAMM,QAPjC,WAAH,IAAAC,EAAA,OAAwB,OAAfZ,QAAe,IAAfA,GAA2B,QAAZY,EAAfZ,EAAiBa,kBAAU,IAAAD,OAAZ,EAAfA,EAA6BE,KAAI,SAAAC,GAAQ,OAAIA,EAAgB,KAAC,GAAE,CAO5BC,SAIzE,C,+EC/BaC,E,QAAiB7B,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0DAG3BC,EAAAA,IAAY,Q,SCHZmB,EAAoB,SAAHlB,GAGH,IAFvBa,EAAIb,EAAJa,KACAM,EAAOnB,EAAPmB,QAEA,OAAKA,EAAQO,QAITZ,EAAAA,EAAAA,KAACW,EAAc,CAAAV,UACXD,EAAAA,EAAAA,KAAA,UAAQD,KAAMA,EAAMc,GAAId,EAAKE,SAErBI,EAAQG,KAAI,SAACM,GAAc,OACvBd,EAAAA,EAAAA,KAAA,UAAQe,MAAOD,EAAOb,SAAEa,GAAgB,QAPjD,IAaf,C","sources":["components/categoriesView/assets/style.tsx","components/categoriesView/index.tsx","components/common/dropdown/assets/style.tsx","components/common/dropdown/index.tsx"],"sourcesContent":["import { isMobile } from \"react-device-detect\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CategoriesViewLayout = styled.div`\r\nmargin: ${isMobile ? '40px 16px' : '40px 188px'};\r\n`;","import { useParams } from \"react-router-dom\";\r\nimport { Title } from \"../common/highlightsCard/assets/style\";\r\nimport { IHomePageProps } from \"../homePage/@types\";\r\nimport { CategoriesViewLayout } from \"./assets/style\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ICategory } from \"../../shared/hooks/useFetchCategories\";\r\nimport { DropdownComponent } from \"../common/dropdown\";\r\n\r\nconst CategoriesViewComponent = ({\r\n    categories,\r\n}: Pick<IHomePageProps, 'categories'>) => {\r\n    const { categoryType } = useParams();\r\n    const [categoryDetails, setCategoryDetails] = useState<ICategory>();\r\n\r\n    useEffect(() => {\r\n        if (categoryType) {\r\n            setCategoryDetails(categories?.find((category) => category.name == categoryType));\r\n        }\r\n    }, [categoryType, categories]);\r\n    if (!categoryDetails) {\r\n        return null;\r\n    }\r\n\r\n    const getDropdownOptions = () => categoryDetails?.activities?.map(activity => activity['title']);\r\n    return (\r\n        <CategoriesViewLayout>\r\n            <div>\r\n                <Title>\r\n                    {categoryDetails?.name}\r\n                </Title>\r\n                <DropdownComponent name={categoryDetails?.name} options={getDropdownOptions()} />\r\n            </div>\r\n        </CategoriesViewLayout>\r\n    );\r\n}\r\n\r\nexport default CategoriesViewComponent;","import { isMobile } from \"react-device-detect\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const DropdownLayout = styled.div`\r\nmargin-top: 16px;\r\nselect {\r\n    width: ${isMobile && '100%'};\r\n}\r\n`;","import { IDropdownComponent } from \"./@types\";\r\nimport { DropdownLayout } from \"./assets/style\";\r\n\r\nexport const DropdownComponent = ({\r\n    name,\r\n    options,\r\n}: IDropdownComponent) => {\r\n    if (!options.length) {\r\n        return null;\r\n    }\r\n    return (\r\n        <DropdownLayout>\r\n            <select name={name} id={name}>\r\n                {\r\n                    options.map((option: string) => (\r\n                        <option value={option}>{option}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n        </DropdownLayout>\r\n    )\r\n};"],"names":["CategoriesViewLayout","styled","_templateObject","_taggedTemplateLiteral","isMobile","_ref","categories","categoryType","useParams","_useState","useState","_useState2","_slicedToArray","categoryDetails","setCategoryDetails","useEffect","find","category","name","_jsx","children","_jsxs","Title","DropdownComponent","options","_categoryDetails$acti","activities","map","activity","getDropdownOptions","DropdownLayout","length","id","option","value"],"sourceRoot":""}